name: Travelhero-backend-development
on:
  push:
    branches: [main]

jobs:
  Travel-hero-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Establish VPN connection
      run: |
              sudo apt update
              sudo apt install -y openvpn openvpn-systemd-resolved
              # First VPN attempt
              echo "${{ secrets.VPN_CONFIG_1 }}" > vpn-config-1.ovpn
              echo "${{ secrets.VPN_USERNAME_1 }}" > vpn-credentials-1.txt
              echo "${{ secrets.VPN_PASSWORD_1 }}" >> vpn-credentials-1.txt
              sudo openvpn --config vpn-config-1.ovpn --auth-user-pass vpn-credentials-1.txt --daemon
              sleep 15
              # Check if VPN connection is established
              if ping -c 1 8.8.8.8 &> /dev/null; then
                  echo "OFFICE-1 VPN CONNECTION ESTABLISHED SUCCESSFULLY."
              else
                  echo "OFFICE-1 VPN CONNECTION FAILED, ATTEMPTING OFFICE-2 VPN."
                  # Second VPN attempt
                  echo "${{ secrets.VPN_CONFIG_2 }}" > vpn-config-2.ovpn
                  echo "${{ secrets.VPN_USERNAME_2 }}" > vpn-credentials-2.txt
                  echo "${{ secrets.VPN_PASSWORD_2 }}" >> vpn-credentials-2.txt
                  sudo openvpn --config vpn-config-2.ovpn --auth-user-pass vpn-credentials-2.txt --daemon
                  sleep 15
                  # Check if second VPN connection is established
                  if ping -c 1 8.8.8.8 &> /dev/null; then
                      echo "OFFICE-2 VPN CONNECTION ESTABLISHED SUCCESSFULLY."
                  else
                      echo "Both VPN connections failed."
                      exit 1
                  fi
              fi
    - name: deploy to Client Development server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_SSH_HOST }}
        username: ${{ secrets.DEV_SSH_USERNAME }}
        key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www/html/travelhero-backend &&
          sudo git pull origin main &&
          sudo npm install &&
          sudo pm2 restart travel-dev || { echo 'Deployment failed' && exit 1; }
    - name: Kill VPN connection
      if: always()
      run: |
        sudo killall openvpn



     # ‚úÖ Success Notification
    - name: Send Teams Notification on Success
      if: success()
      run: |
            curl -X POST https://sparkportal-api.seaswap.co/users/send-teams-message \
            -H "Content-Type: application/json" \
            -H "x-access-token: ${{ secrets.TEAMS_API_TOKEN }}" \
            -d '{
            "chatId": "${{ secrets.CHAT_ID }}",
            "message": "<div style=\"font-family: Arial, sans-serif; line-height: 1.6;\"><p style=\"color: green; font-weight: bold;\">‚úÖ GitHub CI/CD Passed</p><p><strong>Commit by:</strong> ${{ github.actor }}</p><p><strong>Repository:</strong> ${{ github.repository }}</p><p><strong>Branch:</strong> ${{ github.ref_name }}</p><p><strong>Commit:</strong> ${{ github.sha }}</p><p><strong>Message:</strong><br/>${{ github.event.head_commit.message }}</p></div>"
             }'
 
      # ‚ùå Failure Notification to Main Group
    - name: Send Teams Notification on Failure (Main Group)
      if: failure()
      run: |
            curl -X POST https://sparkportal-api.seaswap.co/users/send-teams-message \
            -H "Content-Type: application/json" \
            -H "x-access-token: ${{ secrets.TEAMS_API_TOKEN }}" \
            -d '{
              "chatId": "${{ secrets.CHAT_ID }}",
              "message": "<div style=\"font-family: Arial, sans-serif; line-height: 1.6;\"><p style=\"color: red; font-weight: bold;\">‚ùå GitHub CI/CD Failed</p><p><strong>Commit by:</strong> ${{ github.actor }}</p><p><strong>Repository:</strong> ${{ github.repository }}</p><p><strong>Branch:</strong> ${{ github.ref_name }}</p><p><strong>Commit:</strong> ${{ github.sha }}</p><p><strong>Message:</strong><br/>${{ github.event.head_commit.message }}</p><p><a href=\"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\">üîó View Failed Workflow Run</a></p></div>"
            }'
 
      # ‚ùå Failure Notification to Devops Group
    - name: Send Teams Notification on Failure (Escalation Group)
      if: failure()
      run: |
            curl -X POST https://sparkportal-api.seaswap.co/users/send-teams-message \
            -H "Content-Type: application/json" \
            -H "x-access-token: ${{ secrets.TEAMS_API_TOKEN_DEVOPS }}" \
            -d '{
              "chatId": "${{ secrets.CHAT_ID_DEVOPS }}",
              "message": "<div style=\"font-family: Arial, sans-serif; line-height: 1.6;\"><p style=\"color: red; font-weight: bold;\">‚ùå GitHub CI/CD Failed</p><p><strong>Commit by:</strong> ${{ github.actor }}</p><p><strong>Repository:</strong> ${{ github.repository }}</p><p><strong>Branch:</strong> ${{ github.ref_name }}</p><p><strong>Commit:</strong> ${{ github.sha }}</p><p><strong>Message:</strong><br/>${{ github.event.head_commit.message }}</p><p><a href=\"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\">üîó View Failed Workflow Run</a></p></div>"
            }'


